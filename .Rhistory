y <- ts(1:3)
x <- ts(2:3)
z <- ts(3:5)
x <- ts(2:4)
y
x
t
z
bq
eval(bq)
sapply(eqstr,length)
?length
sapply(eqstr,nchar)
max(sapply(eqstr,nchar))
exonames
exonames
exonames
eqit
deparse(eqit[[26]],wi=500)
?eval
eval(eqbq[[1]])
eval(eqbq[[26]])
eval(eqbq[[26]],sadt)
as.list(sadt)
options(max.print=100)
eval(eqbq[[26]],as.list(sadt))
colnames(sadt)
eval(eqbq[[26]],as.list(adt))
adt
adt
eval(eqbq[[26]],as.list(adt))
eqmod
eqR[[8]]
eqR
substitute(eqmod[[1]],list(y_n_sa=p[1]))
?substitute
endoexo
table(endoexo$exo)
noendog
)
subtb
eqdfsane
?all.names
eqdfsane
subtb
window(atd[,subtb[,1]],start=it0,end=it0)
window(adt[,subtb[,1]],start=it0,end=it0)
length(window(adt[,subtb[,1]],start=it0,end=it0))
x0
dfsane
modelis
firstry$par
x0[23]/x0[12]
log(x0[23]/x0[12])
?dfsane
x0
modelis(x0,eqdfsane)
eqdfsane[[4]]
eval(eqdfsane[[4]],list(y=x0))
modelis(x0,eqdfsane)
modelis(x0,eqdfsane)
eqdfsane
x0
log(x0)
eqdfsane
log(x0)
exp(2.04)
log(100)
?dfsane
firstry$feval
firstry$iter
modelis(log(x0),eqdfsane)
log(100-200)
y
names(adt)
colnames(adt)
save.image()
dir("data")
dim(lad)
lad[,1]
eqstrm
eqR
endoexo
library(tseries)
warnings()
fogs
ftry <- eqforecast(start=c(2008,4),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper)
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper)
ftry <- eqforecast(start=c(2008,2),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper)
ftry <- eqforecast(start=c(2008,2),end=c(2008,4),eqR,endoexo,data=adt,lower=lower,upper=upper)
ftry <- eqforecast(start=c(2008,2),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper)
ftry$x
ftry
ftry$par
time
time(ladt)
fillstartend(c(1991,4),c(2002,1))
fillstartend(c(1991,4),c(2002,1))
debug(fillstartend)
fillstartend(c(1991,4),c(2002,1))
n
y
q
my
y
y
q
Q
fillstartend(c(1991,4),c(2002,1))
fillstartend(c(1991,4),c(2002,1))
fillstartend(c(2002,1),c(2002,4))
fillstartend(c(2002,1),c(2002,4))
fillstartend(c(2002,1),c(2003,4))
fillstartend(c(2002,2),c(2003,3))
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper)
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper)
ftry
window(ladt,start=c(2008,1),end=c(2008,4))
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B")
?optim
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B")
ftry
?xyplot.ts
library(lattice)
xyplot(merge(ladt[,"b_l_sa"],ftry[,"b_l_sa"]))
merge(ladt[,"b_l_sa"],ftry[,"b_l_sa"])
ladt[,"b_l_sa"]
ftry[,"b_l_sa"]
?merge.ts
?merge
merge(ladt[,"b_l_sa"],ftry[,"b_l_sa"],all.x=TRUE)
 x <- data.frame(k1=c(NA,NA,3,4,5), k2=c(1,NA,NA,4,5), data=1:5)
     y <- data.frame(k1=c(NA,2,NA,4,5), k2=c(NA,NA,3,4,5), data=1:5)
     merge(x, y, by=c("k1","k2")) # NA's match
x
y
cbind(ladt[,"b_l_sa"],ftry[,"b_l_sa"])
xyplot(cbind(ladt[,"b_l_sa"],ftry[,"b_l_sa"]))
xyplot(cbind(ladt[,"b_l_sa"],ftry[,"b_l_sa"]),screens=1)
xyplot(cbind(ladt[,"b_l_sa"],ftry[,"b_l_sa"]),screens=1,col=c(1,2))
xyplot(cbind(ladt[,"b_l_sa"],ftry[,"b_l_sa"]),screens=1,col=c(1,2),main="b_l_sa")
dim(adt)
dim(ladt)
ls()
dir("data")
nmi
nmi[,1:2]
nmi[,1]
nmi
match(names(endol),nmi[,2])
match(names(endol),as.character(nmi[,2]))
match(colnames(endol),as.character(nmi[,2]))
intersect(colnames(endol),as.character(nmi[,2]))
nmi
t(ftry)
t(ftry)
res
nmi[,3]
match(colnames(endol),as.character(nmi[,2]))
res
help.search("latex.table")
res
debug(eqforecast)
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B")
subtb
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B")
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B",control=list(trace=1))
eqoy
?latex.table
help.search("latex.table")
help.search("html")
print(xtable(res),type="html")
rownames(res)
?xtable
print(xtable(res),type="html")
res
print(xtable(res),type="html")
?xtable
?print.xtable
print(xtable(res),type="html",include.rows=FALSE)
print(xtable(res),type="html",include.rows=FALSE,file="ftable.html")
print(xtable(res),type="html",include.rows=FALSE,file="ftable.html")  C-c C-c
y
interesect(colnames(adt),colnames(ladt))
intersect(colnames(adt),colnames(ladt))
length(colnames(ladt))
?intersect
 setdiff(colnames(ladt),colnames(adt))
dim(aldt)
dim(adt)
sdalnm
ladt[,sdalnm]
dim(aldt)
dim(adt)
dim(aldt)
aldt <- aldt[,1]
cbind(aldt,ladt[,sdalnm])
start(adt)
start(ladt)
end(adt)
end(ladt)
dim(aldt)
setditff(colnames(ladt),alnm)
setdiff(colnames(ladt),alnm)
setdiff(colnames(ladt),alnm)
sdalnm
alnm
ialnm
sdalnm
setdiff(colnames(ladt),alnm)
dim(aldt)
dim(adt)
save(eqR,endoexo,aldt,lower,upper,nmi,file="lemasta.RData")
colnames(ladt)
colnames(ftry)
intersect("b_l",colnames(ftry))
setdiff(colnames(ladt),"d971014_sa")
setdiff("d971014_sa",colnames(ladt))
?substring
?substring
aa <- setdiff("d971014_sa",colnames(ladt))
substr(a,nchar(aa)-2) <- ""
substr(aa,nchar(aa)-2) <- ""
aa
substr(aa,start=nchar(aa)-2) <- ""
nchar(aa)
substring(aa,1,nchar(aa)-3)
substring(aa,1,nchar(aa)-2)
plot.forecast(aldt,ftry,c("d971014","b_l"))
plot.forecast(aldt,ftry,c("d971014","b_l"))
n
svarn
wsn
wsnr
svarn
fcn
Q
plot.forecast(aldt,ftry,c("d971014","b_l"))
c
?xyplot.tseries
?xylot.ts
?xyplot.ts
nmi
plot.forecast(aldt,ftry,c("d971014","b_l"),nmi)
c
plot.forecast(aldt,ftry,c("d971014","b_l"),nmi)
c
plot.forecast(aldt,ftry,c("d971014","b_l"),nmi)
n
plot.forecast(aldt,ftry,c("d971014","b_l"),nmi)
n
ylab=as.character(labels[match(varn,as.character(labels[,1])),3])
ylab
varn
Q
plot.forecast(aldt,ftry,c("d971014","b_l"),nmi)
c
plot.forecast(aldt,ftry,c("d971014","b_l"),nmi)
c
?xyplot.ts
?xyplot
plot.forecast(aldt,ftry,c("d971014","b_l"),nmi)
c
plot.forecast(aldt,ftry,c("d971014","b_l"),nmi)
c
?panel.xyplot
save(eqR,endoexo,aldt,lower,upper,nmi,file="lemasta.RData")
plot.forecast(aldt,ftry,c("g_n"),nmi)
c
plot.forecast(aldt,ftry,c("g_n"),nmi)
plot.forecast(aldt,ftry,c("g_n"),nmi)
plot.forecast(aldt,ftry,c("g_n"),nmi)
plot.forecast(aldt,ftry,c("g_n"),nmi)
n
fcn
wsnr
Q
plot.forecast(aldt,ftry,c("g_n"),nmi)
n
svarn
wsn
wsnr
Q
plot.forecast(aldt,ftry,c("g_n"),nmi)
plot.forecast(aldt,ftry,c("g_n"),nmi)
xyplot(aldt[,"g_n"])
plot.forecast(aldt,ftry,c("g_n"),nmi)
plot.forecast(aldt,ftry,c("g_n"),nmi)
n
fcn
colnames(fc)
fcn
gofd
fscr
no
plot.forecast(aldt,ftry,c("g_n"),nmi)
plot.forecast(aldt,ftry,c("g_n"),nmi)
n
no
Q
plot.forecast(aldt,ftry,c("g_n"),nmi)
c
y
eqstr
eqR
debug(eqforecast)
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B",control=list(trace=1))
eq
eqit
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B")
c
debug(eqforecast)
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B")
n
eqit
eqit
eqmod
Q
library(tseries)
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B")
n
eqit
v
c
Q
ftry <- eqforecast(start=c(2008,1),end=c(2008,4),eqR,endoexo,data=ladt,lower=lower,upper=upper,method="L-BFGS-B")
eqs
eqy
eqy
eqoy
eqogy
mod.y
ls()
mod.o
c
c
undebug(eqforecast)
eviewstoR.old
y
?scan
str
ss <- scan("/home/mpiktas/R/lemasta/eviews/LEMAM.txt",what=character())
ss
lenght(ss)
length(ss)
ss[[1]]
ss[1]
ss[2]
ss[3]
ss[4]
ss[5]
ss[6]
?scan
ss <- scan("/home/mpiktas/R/lemasta/eviews/LEMAM.txt",what=character(),sep='\n')
ss[1]
ss[3]
ss[2]
ss <- scan("/home/mpiktas/R/lemasta/eviews/LEMAM.txt",what=character(),sep='\n',blank.lines.skip=TRUE,comment.char="'")
length(ss)
ss[1]
ss[2]
ss[3]
ss[4]
ss[5]
ss[6]
ss[7]
ss[8]
ss[9]
?scan
ss <- gsub("@INNOV.*","",ss)
ss
s <- gsub("@IDENTITY \+","",ss)
    
s <- gsub("@IDENTITY +","",ss)
s
?regexp
?gsub
 ss <- ss[ss!=""]
    ss <- gsub("[[].*[]]","",ss)
ss
length(ss)
    ss <- gsub("[+-] *$","",ss)
ss

    
ss
gsub("[+-*/] *$","",ss)
gsub("[+-*] *$","",ss)
gsub("[+-] *$","",ss)
?regexp
 gsub("[:punct:] *$","",ss)
eqstr <- read.eviews("eviews/LEMAM.txt")
n
ss
eqR
eqstrm
eqR
eqmod
it0
eqit
eqmod[[1]]
eqmod[[2]]
eq[[2]]
eqit[[2]]
data[,"y_r_add"]
eqmod[[3]]
eqmod[[4]]
eq[[4]]
eqstr[4]
data[,"c_r_sa"]
log(data[,"c_r_sa"])
Q
eqstrm
y
res
nrows(res)
nrow(res)
'<input type="submit" value="Vaizduoti" id="s'
'"'
'<input type="submit" value="Vaizduoti" id="s'
paste('<input type="submit" value="Vaizduoti" id="s',0:6)
butt
butt
hres
?xtable
xtable(res)
xtable(hres)
?print.xtable
sanitize.text.function
sanitize.text
y
y
    nms <- paste("name='",prefix,"egzo",1:no,"'",sep="")
prefix <- ""
    nms <- paste("name='",prefix,"egzo",1:no,"'",sep="")
nms
ez
ee
ladt[,ee$name[ee$exo=="Exog"]]
t(ladt[,ee$name[ee$exo=="Exog"]])
t(ladt[,ee$name[ee$exo=="Exog"]])[,1:4]
t(ladt[,ee$name[ee$exo=="Exog"]])[,11:14]
dd
produce.form(dd,1,"")
produce.form(dd,1,"")
produce.form(dd,1,"")
produce.form(dd,1,"")
produce.form(dd,1,"")
dd
?formatC
produce.form(dd,1,"")
produce.form(dd,1,"")
produce.form(dd,1,"")
produce.form(dd,1,"")
produce.form(dd,1,"")
library(plyr)
?dapply
?daply
aa <- produce.form(dd,1,"")
aa
colnames(aa)
t(aa)
formatC( 1.321000e+01,digits=2)
aa <- produce.form(dd,1,"")
aa <- produce.form(dd,1,"")
aa
?formatC
aa <- produce.form(dd,1,"")
val
Q
dd
dd[,1]
dd[,2]
dd
dd
?formatC
prettyNum(dd)
dd <- apply(dd,1,prettyNum)
dd
y
aa <- produce.form(dd,1,"")
aa <- produce.form(dd,1,"")
aa
aa <- produce.form(dd,1,"")
aa
dd
dd
dd
aa <- produce.form(dd,1,"")
aa
dd
dim(aa)
dim(dd)
debug(produce.form)
aa <- produce.form(dd,1,"")
egzotb
nm
nms
col.fun(egzotb[,2],nms)
col.fun(egzotb[,2],nms)
?ddply
egzotb
aa <- produce.form(dd,1,"")
aa
aa <- produce.form(dd,1,"")
aa <- produce.form(dd,1,"")
aa
data(baseball)
ddply(baseball, .(year), "nrow") 
 ddply(baseball, .(lg), c("nrow", "ncol"))
baseball
dd
aa <- produce.form(dd,1,"")
aa <- produce.form(dd,"")
aa <- produce.form(dd,"")
aa
aa <- produce.form(dd,"")
aa
?split
?strsplit
strsplit(str,"\n")
?strsplit()
?strsplit
strsplit(strsplit(str,"\n"),";")
strsplit(strsplit(str,"\n")[[1]],";")
fun <- function(x) {
}
ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf)
ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf)
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf))
?cast
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf),~name)
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf),name~)
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf),~name)
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf),value~name)
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf),name~value)
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf),value~name)
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf),~name)
cast(ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf),~name,fun=function(x)x)
?reshape
?recast
?cast
bb <- ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf)
bb
flatten
cast(bb)
?melt
?melt.data.frame
names(bb)[1] <- "variable"
cast(bb)
bb <- ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf)
bb <- ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf)
bb
cast(bb)
bb <- ldply(strsplit(strsplit(str,"\n")[[1]],";"),todf)
bb
cast(bb,variable~row)
?print.xtable
?write.table
write.table(res,sep="\t")
aa <- write.table(res,sep="\t")
aa
print(xtable(hres),type="html")
aa <- print(xtable(hres),type="html")
aa
?write.table
write.table(res,sep="\t")
bu <- write.table(res,sep="\t")
bu
write.table
res
names(res)
csvhtpair(res,1,"scen01")
window(ladt[,"p_mino_sa"])
window(ladt[,"p_mino_sa"],start=c(2009,1))
res2
res
res2
res
y
?optil
?optim
warnings()
?optim
csvhtpair(res,1,"scen01")
csvhtpair(res2,2,"scen02")
csvhtpair(res3,3,"scen03")
?write.table
csvhtpair(res,1,"scen01")
csvhtpair(res2,2,"scen02")
csvhtpair(res3,3,"scen03")
res2
res3
window(ladt[,"p_mino_sa"],start=c(2009,1))
window(ladt[,"i_l"],start=c(2009,1))
window(sc2[,"i_l"],start=c(2009,1))
window(sc3[,"i_l"],start=c(2009,1))
res2
res3
y
dd
dd
dd
aa
aa <- produce.form(dd)
aa
print(xtable(aa),type="html",include.rows=FALSE,file="form1.html",html.table.attributes='border="1" id="table1",cellpading="2"',sanitize.text.function=function(x)x)
dd
doforecast(1,sceno=5)
csvhtpair
doforecast(1,sceno=5)
ee
eqR
y
csvhtpair(res3,4,"varno")
csvhtpair(res3,4,"varno")
y
 fl <- list(expression(y_r_sa),
               expression(c_r_sa),
               expression((x_r_sa-m_r_sa)/y_r_sa*100),
               expression(i_r_sa),
               expression(y_du_sa),
               expression(y_misr_sa),
               expression(p_y_sa),
               expression(p_cpi_sa),
               expression(p_ppi_sa),             
               expression(i_r_sa),
               expression(w_b_sa),
               expression(e_sa),
               expression(e_sal_sa),
               expression(u_sa)
               )
ee
es
es
es$s
es
ee
sad
colnames(sad)
colnames(ad)
colnames(lad)
es
es$Ki
es$V1
ee$name
setdiff(as.character(es$V1),as.character(ee$name))
setdiff(as.character(es$V1),as.character(ee$name))
es
setdiff(as.character(es$name),as.character(ee$name))
setdiff(as.character(ee$name),as.character(es$name))
fl
sapply(fl,as.character)
es
es$name%in%sapply(fl,as.character)
es[es$name%in%sapply(fl,as.character),]
es[es$name%in%sapply(fl,as.character),]
aa <- es[es$name%in%sapply(fl,as.character),]
 bb <- sapply(fl,as.character)
bb
bb <- bb[-3]
bb
cc <- es[es$name%in%sapply(fl,as.character),]
cc
match(bb,as.character(cc$name))
cc[match(bb,as.character(cc$name)),]
produce.tb1
library(plyr)
library(ggplot2)
res3 <- produce.tb1(ftry3$data)
res
debug(produce.tb1)
res <- produce.tb1(ftry$data)
n
tld
agm
ags
c
res <- produce.tb1(ftry$data)
tlfd
tlf
tld
agm
q
Q
y
y
dim(ladt)
end(ladt)
ladt
window(ladt,start=c(2009,1))
eqR
names(exof)
end(exof)
ladt[,colnames(exof)]-exof
colnames(exof)
dim(exof)
dim(ladt)
37-11
ladt[,colnames(exof)]
ladt[,colnames(exof)[1]]
ladt[,colnames(exof)[1:2]]
ladt[,colnames(exof)[1:3]]
ladt[,colnames(exof)[1:4]]
ladt[,colnames(exof)[1:5]]
colnames(exof)
colnames(ladt)
length(eqR)
dim(exof)
length(setdiff(colnames(ladt),colnames(exof)))
ncols
ncol
colnames(ladt)
ladt[,intersect(colnames(exof),colnames(ladt))]
ladt[,colnames(exof)]-exof
window(ladt[,colnames(exof)]-exof,start=c(2009,1))
window(ladt,start=c(2009,1))
window(ladt,start=c(2009,1))
names(exof)
colnames(exof)
ee
dim(ladt)
ftry$res
dim(ftry$res)
?optim
?optim
ftry$data
ftry$res
pdf("forDC.pdf")
xyplot(gofd,screens=rep(1:no,2),col=c(rep("blue",no),rep("red",no)))
dev.offf()
dev.off()
pdf("forDC.pdf",wid=16,hei=12)
xyplot(gofd,screens=rep(1:no,2),col=c(rep("blue",no),rep("red",no)))
dev.off()
eqR
debug(eqforecast)
n
subtb
eqit
eqit[1]
data
eqmod
eqmod[1]
eqit[1]
data[,"a_n_sa"]
eqmod
eqoy
eqs$fn
subtb
eqmod
eqs$fn
subvars
eqmod[[1]]
eqmod[[2]]
eqmod[[3]]
eqmod[[4]]
x0
x0
log(x0)
cd
fc
x0
fogs$par
x0-fc
sum(abs(x0-fc))
log(x0)
fogs$par
cd
cd
fc
exp(fogs$par)
sum(!is.na(cd))
data[ind,subtb[,1]]
ind
eqmod[[5]]
eqmod[[4]]
eqmod[[4]]
ind
it0
ind
cd
ind
fc
log(fc)
loc(x0)
log(x0)
c
c
debug(eqforecast)
eq
eqit
data[,"qm_sa"]
eqmod
eqit
eqmod[[26]]
log(dt[,"qm_sa"])
log(dt[,"qm_sa"])
log(data[,"qm_sa"])
eqmod[[26]]
ind
eqit[[26]]
 ind <- as.numeric(window(indt,start=it0,end=it0))
ind
data[21,"qm_sa"]
log(data[21,"qm_sa"])
log(data[20,"qm_sa"])
eqit[[26]]
indt
eqit[[26]]
log(data[20,"y_n_sa"])
eqmod[[26]]
data[20,"y_n_sa"]
data[21,"y_n_sa"]
data[21,"y_du_sa"]
data[20,"y_du_sa"]
data[20,"i_l"]
eqmod[[26]]
eqit[[26]]
data[19,"i_l"]
data[18,"i_l"]
eqR
eq
Q
eqR
eqit
edlagv
eqmod
Q
Q
warnings()
debug(eqforecast)
debug(eqforecast)
eqs$grad
subtb
debug(eqs.optim)
c
eqmod
eqo
subtable
eqog
eqog[[1]]
eqmod
eqog[[1]]
eqomod
eqmod
eqmod[[25]]
eqog[[1]]
Q
D((exp(log(y))-x)^2,name="y")
?D
D(expression((exp(log(y))-x)^2),name="y")
eqmod
subvars
n
eqo
eqo[[1]]
Q
y
res
debug(produce.tb1.real)
c
c
c
c
c
c
c
c
c
c
c
c
produce.tb1.real(ftry$data)
debug(produce.tb1.real)
produce.tb1.real(ftry$data)
dld
tld
ags
debug(produce.tb1.real)
produce.tb1.real(ftry$data)
rl
as.expression(f[1])
eval(as.expression(f[1]),envir=as.list(ags))
eval(as.expression(y_r_sa),envir=as.list(ags))
ags
as.list(ags)
eval(expression(y_r_sa),envir=as.list(ags))
eval(parse(text="y_r_sa"),envir=as.list(ags))
Q
debug(produce.tb1.real)
eval(parse(text="y_r_sa"),envir=as.list(ags))
produce.tb1.real(ftry$data)
rl
f
f <- c("y_r_sa","c_r_sa","x_r_sa-m_r_s","i_r_sa" )
rl <- foreach(l = f) %do% eval(parse(text = l), envir = as.list(args))
rl <- foreach(l = f) %do% eval(parse(text = l), envir = as.list(ags))
f <- c("y_r_sa","c_r_sa","x_r_sa-m_r_sa","i_r_sa" )
rl <- foreach(l = f) %do% eval(parse(text = l), envir = as.list(ags))
rl
Q
?foreach
 rl <- foreach(l=f,.combine=cbind) %do% window(eval(parse(text=l),envir=as.list(args),start=min(years),end=max(years)) 
)
produce.tb1.real(ftry$data)
n
produce.tb1.real(ftry$data)
n
produce.tb1.real(ftry$data)
n
rl
rl <- foreach(l = f,) %do% eval(parse(text = l), 
?foreach
Q
?foreach
 foreach(l=f,.combine=cbind) %do% eval(parse(text=l),envir=as.list(args))
 foreach(l=f) %do% eval(parse(text=l),envir=as.list(args))
foreach(l=f,.combine=cbind) %do% eval(parse(text=l),envir=as.list(ags))

foreach(l=f) %do% eval(parse(text=l),envir=as.list(ags))
f
 f <- c("y_r_sa","c_r_sa","x_r_sa-m_r_sa","i_r_sa" )
foreach(l=f) %do% eval(parse(text=l),envir=as.list(ags))
foreach(l=f,.combine=cbind) %do% eval(parse(text=l),envir=as.list(ags))
Q
produce.tb1.real(ftry$data)
produce.tb1.real(ftry$data)
res
Q
produce.tb1.real(ftry$data)
produce.tb1.real(ftry$data)
produce.tb1.real(ftry$data)
n
level
rl
l <- rl[[1]]
l
l/lag(l,-1)
(l/lag(l,-1)-1)*100
n
produce.tb1.real(ftry$data)
n
i <- 1
(rl[[i]]/lag(rl[[i]],-1) -1)*100
i <- 2
(rl[[i]]/lag(rl[[i]],-1) -1)*100
i <- 3
(rl[[i]]/lag(rl[[i]],-1) -1)*100
i <- 4
(rl[[i]]/lag(rl[[i]],-1) -1)*100
 foreach(l=rl) %do% (l/lag(l,-1)-1)*100
foreach(l=rl) %do% { (l/lag(l,-1)-1)*100}
n
foreach(el=rl) %do% { (el/lag(el,-1)-1)*100}
Q
produce.tb1.real(ftry$data)
c
produce.tb1.real(ftry$data)
Q
produce.tb1.real(ftry$data)
produce.tb1.real(ftry$data)
n
produce.tb1.real(ftry$data)
n
growth
gdpshare
Q
produce.tb1.real(ftry$data)
produce.tb1.real(ftry$data)
n
ll
n
years
dim(dt)
dim(dt)
produce.tb1.real(ftry$data)
produce.tb1.real(ftry$data)
n
res
ll
dt
dt
Q
produce.tb1.real(ftry$data)
n
produce.tb1.real(ftry$data)
c
produce.tb1.real(ftry$data)
c
?foreach
doforecast(1,sceno=5)
produce.tb1.real(ftry$data)
c
xx <- list(a=1,b=2)
foreach(x=xx)%do% x^2
xx
produce.tb1.real(ftry$data)
tbreal1 <- produce.tb.sum(ftry$data,freal1,fnmr1,years=2005:2011)
tbreal1
y
